name: Build

on: push

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v4
      with:
        # To fetch tags
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: "pip"
        cache-dependency-path: "requirements-packaging.txt"

    # - name: Install Qt lrelease
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install qttools5-dev-tools

    - name: Install Python requirements
      run: pip install -r requirements-packaging.txt

    - name: Set plugin version environment variables
      run: |
        TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "VERSION=$(echo ${TAG} | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')-alpha" >> $GITHUB_ENV
        echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Embed external dependencies
      run: |
        wget https://github.com/geoalchemy/geoalchemy2/archive/0.8.4.zip
        unzip 0.8.4.zip
        cp -r geoalchemy2-0.8.4/geoalchemy2/ src/NZGBplugin/
        wget https://github.com/sqlalchemy/sqlalchemy/archive/rel_1_3_12.zip
        unzip rel_1_3_12.zip
        cp -r sqlalchemy-rel_1_3_12/lib/sqlalchemy/ src/NZGBplugin/

    - name: Build package
      run: |
        qgis-plugin-ci --no-validation package ${{ env.VERSION }} --asset-path src/NZGBplugin/geoalchemy2 --asset-path src/NZGBplugin/sqlalchemy
        mkdir tmp
        unzip src/NZGBplugin.${{ env.VERSION }}.zip -d tmp
        mv tmp/nzgbplugin tmp/NZGBplugin

    - name: Save PR number to zips
      run: |
        cd tmp
        echo ${{ github.event.number }} | tee pr_number
        echo ${{ github.event.pull_request.head.sha }} | tee git_commit
        echo ${{ github.event.number }}

    - uses: actions/upload-artifact@v4
      with:
        name: nzgb_plugin.${{ env.VERSION }}
        path: tmp
